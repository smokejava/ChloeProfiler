<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" width="100%" height="565" y.hide="1024" y.show="459" xmlns:view="com.chloe.mvcs.view.*" xmlns:common="com.chloe.mvcs.view.common.*" xmlns:radioVerticalScroller="com.chloe.mvcs.view.common.radioVerticalScroller.*" xmlns:dragCombobox="com.chloe.mvcs.view.common.dragCombobox.*" addedToStage="onAddedToStageHandler(event)">
	<fx:Script>
		<![CDATA[
			import com.chloe.mvcs.model.address.AddressHistoryModel;
			import com.chloe.mvcs.model.name.FullNameHistoryModel;
			import com.chloe.mvcs.model.phone.PhoneNumberHistoryModel;
			import com.chloe.mvcs.view.common.radioVerticalScroller.RadioScrollItem;
			
			import mx.collections.ArrayCollection;
			import mx.utils.StringUtil;
			
			import spark.filters.DropShadowFilter;
			
			[Bindable][Embed(source="embedded_assets/saveButton.png")]
			private var saveButtonBitmap:Class;
			
			[Bindable][Embed(source="embedded_assets/cancelButton.png")]
			private var cancelButtonBitmap:Class;
			
			[Bindable][Embed(source="embedded_assets/verifyAddressButton.png")]
			private var verifyAddressButtonBitmap:Class;
			
			[Bindable]
			private var address:String;
			
			[Bindable]
			private var phoneTypes:ArrayCollection = new ArrayCollection(["personal", "business"]);
			
			[Bindable]
			private var months:ArrayCollection = new ArrayCollection(["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]);
			
			[Bindable]
			private var days:ArrayCollection;
			
			[Bindable]
			private var years:ArrayCollection;
			
			[Bindable]
			private var countryCodes:ArrayCollection;
			
			private var _phoneHistory:PhoneNumberHistoryModel;
			
			private var _typeOfEdit:String = new String();
			
			public function set phoneHistory(value:PhoneNumberHistoryModel):void {
				
				_phoneHistory = value;
				
			}
			
			public function set typeOfEdit(value:String):void {
				
				_typeOfEdit = value;
			}
			
			private function onAddedToStageHandler(event:Event):void {
				
				Multitouch.inputMode = MultitouchInputMode.GESTURE;
				this.addEventListener(TransformGestureEvent.GESTURE_SWIPE, onSwipeDownHandler);
				
				makeDays();
				makeYears();
				makeCountryCodes();
			}
			
			private function onSwipeDownHandler(event:TransformGestureEvent):void {
				
				if(event.offsetY==1) {
					this.currentState=="hide";
				}
			}
			
			private function onSaveClickHandler(event:MouseEvent):void {
				
				this.currentState = "hide";
				
				this._phoneHistory.phoneNumber.fullPhoneNumber = this.nameInput.text;
				
				if(_typeOfEdit == "add") {
					
					dispatchEvent(new PhoneNumberEvent(PhoneNumberEvent.SAVE_NEW_PHONE_NUMBER, this._phoneHistory));
				} else {
					dispatchEvent(new PhoneNumberEvent(PhoneNumberEvent.SAVE_EXISTING_PHONE_NUMBER, this._phoneHistory));
				}
			}
			
			private function onCancelClickHandler(event:MouseEvent):void {
				
				this.currentState = "hide";
			}
			
			private function onVerifyAddressClickHandler(event:MouseEvent):void {
				
				
					
			}
			
			private function makeCountryCodes():void {
				
				this.countryCodes = new ArrayCollection(["01 - United States",
					"01 Canada",
					"44 United Kingdom",
					"93 Afghanistan",
					"54 - Argentina",
					"61 - Australia",
					"43 - Austria",
					"880 - Bangladesh",
					"32 - Belgium",
					"55 - Brazil",
					"56 - Chile",
					"86 - China",
					"57 - Colombia",
					"53 - Cuba",
					"42 - Czech Republic",
					"45 - Denmark",
					"20 - Egypt",
					"33 - France",
					"49 - Germany",
					"30 - Greece",
					"36 - Hungary",
					"91 - India",
					"62 - Indonesia",
					"353 - Ireland",
					"39 - Italy",
					"81 - Japan",
					"82 - Korea",
					"41 - Liechtenstein",
					"60 - Malaysia",
					"52 - Mexico",
					"373 - Moldova",
					"95 - Myanmar",
					"31 - Netherlands",
					"47 - Normway",
					"92 - Pakistan",
					"51 - Peru",
					"63 - Philippines",
					"48 - Poland",
					"40 - Romania",
					"7 - Russia Federation",
					"65 - Singapore",
					"42 - Slovak Republic",
					"94 - Sri Lanka",
					"27 - South Africa",
					"34 - Spain",
					"46 - Sweden",
					"41 - Switzerland",
					"66 - Thailand",
					"90 - Turkey",
					"58 - Venezuela",
					"84 - Vietnam"]);
			}
			
			private function makeDays():void {
				
				this.days = new ArrayCollection()
				var a:int = 1;
				var b:int = 32;
				for(;a<b;a++) {
					
					this.days.addItem(a.toString());
				}
			}
			
			private function makeYears():void {
				
				this.years = new ArrayCollection()
				var a:int = new Date().fullYear - 110;
				var b:int = new Date().fullYear + 50;
				for(;a<b;a++) {
					this.years.addItem(a.toString());
				}
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<s:states>
		<s:State name="hide"/>
		<s:State name="show"/>
	</s:states>
	<s:transitions>
		<s:Transition fromState="hide" toState="show" autoReverse="true">
			<s:Move target="{this}" duration="500"/>
		</s:Transition>
	</s:transitions>
	
	<s:Group>
		<s:Rect width="1024" height="565" filters="{[new spark.filters.DropShadowFilter(2, -90, 0x000000, .56, 4, 4, 1, 2)]}">
			<s:fill>
				<s:SolidColor color="#FFFFFF"/>
			</s:fill>
		</s:Rect>
		
		<s:Group>
			<s:layout>
				<s:HorizontalLayout/>
			</s:layout>
			<s:Group id="saveButton" click="onSaveClickHandler(event)">
				<s:BitmapImage  source="{saveButtonBitmap}"/>
			</s:Group>
			<s:Group id="cancelButton" click="onCancelClickHandler(event)">
				<s:BitmapImage  source="{cancelButtonBitmap}"/>
			</s:Group>
		</s:Group>
		<s:Group  left="30" top="100" bottom="10" right="10">

			<s:Group>
				<s:Group y="20">
					<s:layout>
						<s:HorizontalLayout gap="5"/>
					</s:layout>
					<dragCombobox:DragComboBox id="countryCodeComboBox" totalWidth="150" dataProvider="{this.countryCodes}"/>
					<s:TextInput id="nameInput" width="500" height="47" editable="true" text="{address}" needsSoftKeyboard="true" softKeyboardType="number" horizontalCenter="0" prompt="give me some digits, including the area code." top="16" styleName="searchInput2" focusRect="false" borderVisible="false" skinClass="com.chloe.mvcs.view.common.skins.textInput.ChloeTextAreaSkin" filters="{[new spark.filters.DropShadowFilter(2, 90, 0x000000, .25, 2, 2, 1, 2, true)]}"/>
				</s:Group>
				<s:Label text="PHONE NUMBER" styleName="EditorTitle" y="0"/>
				
			</s:Group>
			<s:Group y="140">
				<s:layout>
					<s:VerticalLayout gap="10"/>
				</s:layout>
				<s:Label text="WHAT TYPE OF PHONE NUMBER IS/WAS THIS?" styleName="EditorTitle"/>
				<radioVerticalScroller:RadioScroller id="typeRadio" dataProvider="{phoneTypes}" width="700"/>
			</s:Group>
			<s:Group y="240">
				<s:layout>
					<s:HorizontalLayout gap="40"/>
				</s:layout>
				<s:Group>
					<s:Group y="5">
						<s:layout>
							<s:HorizontalLayout gap="3"/>
						</s:layout>
						<dragCombobox:DragComboBox dataProvider="{months}" totalWidth="90"/>
						<dragCombobox:DragComboBox id="startDays" dataProvider="{days}" totalWidth="30"/>
						<dragCombobox:DragComboBox id="startYears" dataProvider="{years}" totalWidth="50"/>
					</s:Group>
					<s:Label y="0" text="STARTED USING THIS NUMBER" styleName="EditorTitle"/>
				</s:Group>
				
				<s:Group>
					<s:Group y="5">
						<s:layout>
							<s:HorizontalLayout gap="3"/>
						</s:layout>
						<dragCombobox:DragComboBox dataProvider="{months}" totalWidth="90"/>
						<dragCombobox:DragComboBox id="endDays" dataProvider="{days}" totalWidth="30"/>
						<dragCombobox:DragComboBox id="endYears" dataProvider="{years}" totalWidth="50"/>
					</s:Group>
					<s:Label y="0" text="STOPPED USING THIS NUMBER" styleName="EditorTitle"/>
				</s:Group>
			</s:Group>
		</s:Group>
		
	</s:Group>
	
	
</s:Group>
